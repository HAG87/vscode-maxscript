{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "mxs",
	"fileTypes": [ "ms", "mse", "mcr" ],
	"foldingStartMarker": "(-{2})?\\(\\s*$",
	"foldingStopMarker": "^\\s*(-{2})?\\s*\\)",

	"patterns": [
		{ "include": "#parens"},
		{ "include": "#brackets"},
		{ "include": "#cur_braces"},
		{ "include": "#variable"},
		{ "include": "#comment" },
		{ "include": "#keywords" },
		{ "include": "#strings" },
		{ "include": "#constant" },
		{ "include": "#numeric" },
		{ "include": "#storage" },
		{ "include": "#meta" },
		{ "include": "#support" }
	],
	"repository": {
		"balanced_parens":
				{
					"name" : "section.parens.mxs",
					"begin": "\\(",
					"end": "\\)",
					"beginCaptures": {"0": {"name": "punctuation.section.parens.begin.mxs"}},
					"endCaptures": {"0": {"name": "punctuation.section.parens.end.mxs"}},
					"patterns": [
						{"include": "#balanced_parens"}
					]
				},
		"parens": {
			"patterns": [
				{
					"name": "punctuation.section.parens.begin.mxs",
					"match": "\\("
				},
				{
					"name": "punctuation.section.parens.end.mxs",
					"match": "\\)"
				}
			]
		},
		"brackets":{
			"patterns": [
				{
					"name": "punctuation.section.brackets.begin.mxs",
					"match": "\\["
				},
				{
					"name": "punctuation.section.brackets.end.mxs",
					"match": "\\]"
				}
			]
		},
		"cur_braces": {
			"patterns": [
				{
					"name": "punctuation.section.braces.begin.mxs",
					"match": "\\{"
				},
				{
					"name": "punctuation.section.braces.end.mxs",
					"match": "\\}"
				}
			]
		},
		"notes": {
			"patterns": [
				{
					"match":"(@param)\\s+(\\w+)",
					"captures": {
						"1":{"name": "storage.type.class"},
						"2":{"name": "variable.other"}
					}
				},
				{
					"name": "documentation.todo.mxs",
					"match": "(?i)todo:"
				},
				{
					"name": "documentation.fixme.mxs",
					"match": "(?i)fixme:"
				},
				{
					"name": "documentation.plain.mxs",
					"begin": "\\|",
					"end": "\\|",
					"patterns": [
						{ "include": "#numeric" },
						{ "include": "#strings" },
						{ "include": "#storage" },
						{ "include": "#support" },
						{ "include": "#notes" }
					]
				},
				{
					"name": "documentation.bold.mxs",
					"match": "\\b_[^_]([\\w\\s])+?_\\b"
				},
				{
					"name": "documentation.underline.mxs",
					"match": "\\b__[^_]([\\w\\s])+?__\\b"
				}
			]
		},
		"comment": {
			"patterns": [
				{
					"name": "comment.line.mxs",
					"begin":"--",
					"end":"$",
					"captures": {
						"0":{"name":"punctuation.definition.comment.mxs"}
					}
				},
				{
					"name":"comment.block.documentation.mxs",
					"begin": "(?m)/\\*\\*",
					"end":"(?m)\\*/",
					"captures":{
						"0":{"name":"punctuation.definition.comment.mxs"}
					},
					"patterns": [
						{ "include": "#numeric" },
						{ "include": "#strings" },
						{ "include": "#storage" },
						{ "include": "#support" },
						{ "include": "#notes" }
					]
				},
				{
					"name":"comment.block.mxs",
					"begin": "/\\*",
					"end":"\\*/",
					"captures":{
						"0":{"name":"punctuation.definition.comment.mxs"}
					}
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name":"keyword.operator.mxs",
					"match": "(?i)(?:(\\+=?|\\*=?|-=?|\\/=?|\\^|!?=|={1,2}|<=?|>=?))"
				},
				{
					"name":"keyword.operator.linebreak.mxs",
					"match": "\\\\"
				},
				{
					"name": "keyword.operator.statement.mxs",
					"match": ";"
				},
				{
					"name": "keyword.operator.delimiter.mxs",
					"match": ","
				},
				{
					"name": "keyword.operator.period.mxs",
					"match": "[\\.](?!\\d)"
				},
				{
					"name":"keyword.control.assign.mxs",
					"match": "(?<!:):(?=[^:]|:{2}[^:])"
				},
				{
					"name":"keyword.operator.word.mxs",
					"match": "(?i)(?<![.$])\\b(and|or|as|not)\\b"
				},
				{
					"name": "keyword.control.mxs",
					"match": "(?i)\\b(?>case|catch|collect|continue|do|else|exit|for|if|return|then|throw|try|when|where|while|with|dontcollect|of|at|by|in|to)\\b"
				},
				{
					"name":  "keyword.other.mxs",
					"match": "(?i)\\b(?>about|coordsys|max|animate|from|undo|set)\\b"
				},
				{
					"name":"keyword.operator.byref.mxs",
					"match": "(&)(?=\\w)"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name":"string.quoted.other.mxs",
					"begin": "~",
					"end": "~",
					"patterns": [
						{
							"name":  "constant.character.escape.mxs",
							"match": "\\\\(\\*|\\?|\\\\|\\')"
						}
					]
				},
				{
					"name": "string.quoted.double.mxs",
					"begin": "(?<!@)\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape.mxs",
							"match": "\\\\(\"|n|r|t|\\*|\\?|\\\\|%|x[A-Fa-f0-9]+)"
						}
					]
				},
				{
					"name":  "string.quoted.double.verbatim.mxs",
					"begin": "(@)(\")",
					"end":   "\"",
					"beginCaptures": {
						"1": {"name": "string.verbatim.operator.mxs" }
					}
				},
				{
					"name":  "string.quoted.single.mxs",
					"begin": "'",
					"end":   "'",
					"patterns": [{
						"name":  "constant.character.escape.mxs",
						"match": "\\\\(\\*|\\?|\\\\|\\')"
					}]

				},
				{
					"name":  "string.unquoted.name.mxs",
					"match": "(#)(\\w+)\\b"
				},
				{
					"name":  "string.quoted.name.mxs",
					"match": "(#)(?:('[^']*')|(\\w+))\\b"
				}
			]
		},
		"numeric":{
			"patterns": [
				{
					"name": "constant.numeric.mxs",
					"match": "(?<!\\.)\\b[+-]?\\d+[lLpP]?(?!\\.)\\b"
				},
				{
					"name": "constant.numeric.mxs",
					"match": "\\b\\d+\\.\\d+([EeDd][+-]?\\d+)?"
				},
				{
					"name": "constant.numeric.mxs",
					"match": "\\b(\\d+)(\\.)(?!\\w)"
				},
				{
					"name": "constant.numeric.mxs",
					"match": "(?<!\\w)(\\.\\d+([EeDd][+-]?\\d+)?)"
				},
				{
					"name": "constant.numeric.mxs",
					"match": "(?<!\\w|\\.)(?:\\d*\\.\\d+|\\d+\\.?\\d*)[msft](?:(?:\\d+|\\d*\\.\\d*)[msft])*"
				},
				{
					"name": "constant.numeric.mxs",
					"match": "(?<!\\w)\\d+:\\d*\\.\\d*(?!\\w)"
				},
				{
					"name": "constant.numeric.mxs",
					"match": "(?<!\\w|\\.)(?:\\d*\\.\\d+|\\d+\\.?\\d*)n(?!\\w)"
				},
				{
					"name": "constant.numeric.mxs",
					"match": "\\b(0x\\w+)\\b"
				},
				{
					"name":  "contant.numeric.bit-range.mxs",
					"match": "(?<!\\$)\\b(\\d+)(\\.{2})(\\d+)\\b"
				}
			]
		},
		"meta": {
			"patterns":[
				{
					"name":"meta.definition.struct.mxs",
					"match": "(?i)(?:\\b(struct)\\b\\s+(\\w+))",
					"captures": {
						"1":{"name":"storage.type.mxs"},
						"2":{"name":"entity.name.struct.mxs"}
					}
				},
				{
					"name":"meta.definition.function.mxs",
					"begin":"(?i)\\b((?:mapped\\s+)?(?:fn|function))\\s+(\\w+)",
					"end":"=",
					"beginCaptures": {
						"1": {"name": "storage.type.mxs"},
						"2": {"name": "entity.name.function.mxs"}
					},
					"patterns": [
						{"include": "#variable"},
						{"include": "$self"}
					],
					"endCaptures": {
						"0": {"name": "keyword.operator.mxs"}
					}
				},
				{
					"name":"meta.definition.event.mxs",
					"begin": "(?im)^(?:[ \\t]|;)*(on)\\b",
					"end": "(?i)\\b(do|return)\\b",
					"beginCaptures": {
						"1":{"name":"storage.type.mxs"}
					},
					"endCaptures": {
						"1": {"name": "keyword.control.mxs"}
					},
					"patterns": [
						{
							"match":"(?i)(?:\\s+(\\w+))?\\s+(\\w+)\\s+(?=do|return)",
							"captures":{
								"1":{"name":"entity.target.event.mxs"},
								"2":{"name":"entity.name.event.mxs"}
							}
						},
						{
							"match":"(?i)\\s+(\\w+)\\s+(\\w+)\\s+(\\w+)(?:\\s+(\\w+))?\\s+(?=do|return)",
							"captures":{
								"1":{"name":"entity.target.event.mxs"},
								"2":{"name":"entity.name.mxs"},
								"3":{"name":"entity.argument.mxs"},
								"4":{"name":"entity.argument.mxs"}
							}
						}
					]
				},
				{
					"match": "(?i)\\b(macroscript|parameters|plugin|rcmenu|rollout|tool|utility)\\b\\s+(\\w+)\\b",
					"captures": {
						"1":{"name":"storage.type.mxs"},
						"2":{"name":"entity.name.utility.mxs"}
					}
				}

			]
		},
		"variable":{
			"patterns": [
				{
					"name":"variable.property.mxs",
					"match": "(?<=\\.)([0-9]*[A-Za-z_]+\\w*)\\b"
				},
				{
					"name":"variable.parameter.mxs",
					"match": "\\b([0-9]*[A-Za-z_]+\\w*)(?=\\s*:[^:])",
					"comment": "Matches keyword assignment in function calls and definitions (e.g., fn add flag:#optional)"
				},
				{
					"name":"variable.language.mxs",
					"match": "(?i)\\b(this)\\b"
				},
				{
					"name": "variable.other.global.mxs",
					"match": "(:{2})(\\w+)\\b"
				},
				{
					"name":"variable.other.pathname.mxs",
					"match": "\\b[$]\\b|[$](?:(?:[A-Za-z0-9_*?/\\\\]|[.]{3})*)"
				}
			]
		},
		"constant":{
			"patterns": [
				{
					"name":  "constant.language.boolean.mxs",
					"match": "(?i)\\b(true|on|false|off)\\b"
				},
				{
					"name":  "constant.language.math.mxs",
					"match": "(?i)\\b(pi|e)\\b"
				},
				{
					"name":  "constant.language.colour.mxs",
					"match": "(?i)\\b(?>red|green|blue|white|black|orange|yellow|brown|gray)\\b"
				},
				{
					"name":  "constant.language.axis.mxs",
					"match": "(?i)\\b([xyz]_axis)\\b"
				},
				{
					"name":  "constant.language.null.mxs",
					"match": "(?i)\\b(?>undefined|unsupplied|silentvalue|ok)\\b"
				}
			]
		},
		"storage":{
			"patterns": [
				{
					"name": "storage.type.mxs",
					"match": "(?i)\\b(?>global|local|private|public|persistent)\\b"
				},
				{
					"name": "storage.type.array.mxs",
					"begin": "(#)\\s*(\\()",
					"end": "\\)",
					"beginCaptures":{
						"1": {"name": "keyword.definition.array.begin.mxs"},
						"2": {"name": "punctuation.section.parens.begin.mxs"}
					},
					"endCaptures":{
						"0": {"name": "punctuation.section.parens.end.mxs"}
					},
					"patterns": [
						{ "include": "#brackets"},
						{ "include": "#cur_braces"},
						{ "include": "#variable"},
						{ "include": "#comment" },
						{ "include": "#keywords" },
						{ "include": "#strings" },
						{ "include": "#constant" },
						{ "include": "#numeric" },
						{ "include": "#storage" },
						{ "include": "#meta" },
						{"include": "#balanced_parens"}
					]
				},
				{
					"name": "storage.type.bitarray.mxs",
					"begin": "(#)\\s*(\\{)",
					"end": "\\}",
					"beginCaptures":{
						"1": {"name": "keyword.definition.bit.array.begin.mxs"},
						"2": {"name": "punctuation.section.braces.begin.mxs"}
					},
					"endCaptures":{
						"0": {"name": "punctuation.section.braces.end.mxs"}
					},
					"patterns": [
						{ "include": "#parens"},
						{ "include": "#brackets"},
						{ "include": "#variable"},
						{ "include": "#comment" },
						{ "include": "#keywords" },
						{ "include": "#strings" },
						{ "include": "#constant" },
						{ "include": "#numeric" },
						{ "include": "#storage" },
						{ "include": "#meta" }
					]
				}
			]
		},
		"support":{
			"patterns": [
				{
					"name": "support.type.primitive.mxs",
					"match": "(?i)\\b(?>AngleAxis|Array|BigMatrix|BigMatrixRowArray|BinStream|BitArray|Bitmap|Box2|Box3|color|DataPair|Dictionary|Double|EulerAngles|FileStream|Float|HKey|Integer|Integer64|IntegerPtr|Matrix3|MAXKey|mesh|Name|PathName|Point2|Point3|Point4|Quat|Ray|String|StringStream|Time|Timer|TriMesh)\\b"
				},
				{
					"name": "support.variable.objectset.mxs",
					"match": "(?i)\\b(?>cameras|geometry|helpers|lights|object|objects|objectSet|primitive|selection|shapes|spacewarps|systems)\\b"
				},
				{
					"name": "support.constant.mxs",
					"match": "(?i)\\b(?>\\?|assetUser|Constant|emptyVal|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_PERFORMANCE_DATA|HKEY_USERS|meditMaterials|selectionSets)\\b"
				},
				{
					"name": "support.type.rolloutcontrol.mxs",
					"match": "(?i)\\b(?>angle|button|checkbox|checkbutton|colorpicker|comboBox|curveControl|dotNetControl|dropdownList|editText|group|groupBox|hyperLink|imgTag|label|listBox|mapbutton|materialbutton|menuitem|subMenu|separator|multilistBox|pickbutton|popUpMenu|progressbar|radiobuttons|SchematicControl|slider|spinner|SubRollout|timer)\\b"
				}
			]
		}
	},
	"scopeName": "source.mxs"
}