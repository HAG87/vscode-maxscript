interface ItokenDefinitions {
	[key: string] : string;
}
export const tokenDefinitions: ItokenDefinitions = {
	'arraydef':       'Array definition',
	'bitarraydef':    'BitArray definition',
	'comment_BLK':    'Block comment',
	'comment_SL':     'Single line comment',
	'global_typed':   'Typed ::Global ',
	'hex':            'Hex literal',
	'identity':       'Identifier',
	'kw_about':       '<about> keyword',
	'kw_at':          '<at> keyword',
	'kw_bool':        'Boolean value <false|off>',
	'kw_case':        '<case> keyword',
	'kw_context':     'Context statement',
	'kw_coordsys':    '<coordsys> keyword',
	'kw_do':          '<do> keyword',
	'kw_exit':        '<exit> keyword',
	'kw_for':         '<for> keyword',
	'kw_function':    'Function declaration',
	'kw_global':      '<global> keyword',
	'kw_group':       '<group> keyword',
	'kw_if':          '<if> keyword',
	'kw_in':          '<in> keyword',
	'kw_local':       '<local> keyword',
	'kw_macroscript': '<macroscript> declaration',
	'kw_mapped':      '<mapped> keyword',
	'kw_not':         '<not> keyword',
	'kw_null':        'Undefined value',
	'kw_objectset':   '<objectset> keyword',
	'kw_on':          'Boolean value <true|on>',
	'kw_persistent':  '<persistent global> keyword',
	'kw_plugin':      '<plugin> declaration',
	'kw_rcmenu':      '<rcmenu> declaration',
	'kw_return':      '<return> keyword',
	'kw_rollout':     '<rollout> declaration',
	'kw_set':         '<set> keyword',
	'kw_struct':      '<struct> keyword',
	'kw_time':        '<time> keyword',
	'kw_tool':        '<tool> declaration',
	'kw_try':         '<try> keyword',
	'kw_uicontrols':  'UI control',
	'kw_undo':        '<undo> keyword',
	'kw_utility':     '<utility> declaration',
	'kw_when':        '<when> keyword',
	'kw_while':       '<while> keyword',
	'kw_with':        '<with> keyword',
	'lparen':         'Left paren <(>',
	'name':           'Name literal',
	'negint':         'Number literal <-integer>',
	'newline':        'New line',
	'number':         'Number literal <float>',
	'path':           'pathName literal',
	'posint':         'Number literal <integer>',
	'string':         'String literal',
	'time':           'Time literal',
	'ws':             'White space'
};
//# sourceMappingURL=mxsTokenDefs.js.map